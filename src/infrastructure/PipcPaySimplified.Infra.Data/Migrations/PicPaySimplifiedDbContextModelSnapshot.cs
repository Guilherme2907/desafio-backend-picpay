// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PipcPaySimplified.Infra.Data;

#nullable disable

namespace PipcPaySimplified.Infra.Data.Migrations
{
    [DbContext(typeof(PicPaySimplifiedDbContext))]
    partial class PicPaySimplifiedDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PipcPaySimplified.Domain.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PipcPaySimplified.Domain.Entities.User.UserBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("UserBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PipcPaySimplified.Domain.Entities.User.UserCommon", b =>
                {
                    b.HasBaseType("PipcPaySimplified.Domain.Entities.User.UserBase");

                    b.HasDiscriminator().HasValue("UserCommon");
                });

            modelBuilder.Entity("PipcPaySimplified.Domain.Entities.User.UserLogistician", b =>
                {
                    b.HasBaseType("PipcPaySimplified.Domain.Entities.User.UserBase");

                    b.HasDiscriminator().HasValue("UserLogistician");
                });

            modelBuilder.Entity("PipcPaySimplified.Domain.Entities.Account", b =>
                {
                    b.HasOne("PipcPaySimplified.Domain.Entities.User.UserBase", "User")
                        .WithOne("Account")
                        .HasForeignKey("PipcPaySimplified.Domain.Entities.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PipcPaySimplified.Domain.Entities.User.UserBase", b =>
                {
                    b.OwnsOne("PipcPaySimplified.Domain.ValueObjects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("UserBaseId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("varchar(255)")
                                .HasColumnName("Cpf");

                            b1.HasKey("UserBaseId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserBaseId");
                        });

                    b.OwnsOne("PipcPaySimplified.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserBaseId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("varchar(255)")
                                .HasColumnName("Email");

                            b1.HasKey("UserBaseId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserBaseId");
                        });

                    b.Navigation("Cpf")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("PipcPaySimplified.Domain.Entities.User.UserBase", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
